!function (a, b) { a.Truncate = b() }(this, function () { var b = ["table", "thead", "tbody", "tfoot", "tr", "col", "colgroup", "object", "embed", "param", "ol", "ul", "dl", "blockquote", "select", "optgroup", "option", "textarea", "script", "style"]; function c(a) { return a.replace(/\s*$/, "") } function d(a, b) { if (a.innerText) a.innerText = b; else if (a.nodeValue) a.nodeValue = b; else { if (!a.textContent) return !1; a.textContent = b } } function e(g, k, a, h) { var b, c = g.parentElement; g.remove(); var i = a ? a.length : 0; if (c.childNodes.length > i) { let j = c.childNodes; return f(b = j[j.length - 1 - i], k, a, h) } { let e = c.previousElementSibling?.childNodes; if ((b = e ? e[e.length - 1] : null) && b.length) return d(b, b.textContent + h.ellipsis), c.remove(), a && a.text.length && b.append(a), !0 } return !1 } function f(b, f, g, a) { return "end" === a.position ? function (b, k, m, h) { for (var f, i, l = b.textContent, a = "", g = 0, j = l.length; g <= j;)f = g + (j - g >> 1), d(b, i = c(l.substr(0, f + 1)) + h.ellipsis), k.clientHeight > h.maxHeight ? j = f - 1 : (g = f + 1, a = a.length > i.length ? a : i); return a.length > 0 ? (d(b, a), !0) : e(b, k, m, h) }(b, f, g, a) : "start" === a.position ? function (b, l, m, h) { for (var f, i, j = b.textContent, a = "", g = 0, k = j.length; g <= k;)f = g + (k - g >> 1), d(b, i = h.ellipsis + c(j.substr(f - 1, j.length))), l.clientHeight > h.maxHeight ? g = f + 1 : (k = f - 1, a = a.length > i.length ? a : i); return a.length > 0 ? (d(b, a), !0) : e(b, l, m, h) }(b, f, g, a) : function (f, m, n, h) { for (var a, i, j = f.textContent, b = "", g = 0, k = j.length, l = k >> 1; g <= l;)a = g + (l - g >> 1), d(f, i = c(j.substr(0, a)) + h.ellipsis + j.substr(k - a, k - a)), m.clientHeight > h.maxHeight ? l = a - 1 : (g = a + 1, b = b.length > i.length ? b : i); return b.length > 0 ? (d(f, b), !0) : e(f, m, n, h) }(b, f, g, a) } function g(c, g, a, i) { for (var d, j = c.cloneNode(!0), k = j.childNodes, m = k.length, e = !1; c.firstChild;)c.removeChild(c.firstChild); for (let l = 0; l < m && !e; l++) { if (8 === (d = k[0]).nodeType) { j.removeChild(d); continue } c.appendChild(d), a && a.text.length && (b.indexOf(c.tagName.toLowerCase()) >= 0 ? c.after(a) : c.append(a)), g.clientHeight > i.maxHeight && (e = 3 === d.nodeType ? f(d, g, a, i) : h(d, g, a, i)), !e && a && a.text.length && a.remove() } return e } function h(c, d, e, a) { return "end" === a.position ? g(c, d, e, a) : "start" === a.position ? function (a, g, c, i) { for (var d, k = a.cloneNode(!0), j = k.childNodes, m = j.length, e = !1; a.firstChild;)a.removeChild(a.firstChild); for (let l = m - 1; l >= 0 && !e; l--) { if (8 === (d = j[j.length - 1]).nodeType) { k.removeChild(d); continue } a.insertBefore(d, a.firstChild), c && c.text.length && (b.indexOf(a.tagName.toLowerCase()) >= 0 ? a.after(c) : a.append(c)), g.clientHeight > i.maxHeight && (e = 3 === d.nodeType ? f(d, g, c, i) : h(d, g, c, i)), !e && c && c.text.length && c.remove() } return e }(c, d, e, a) : g(c, d, e, a) } function a(a, b) { this.element = a, this._name = "truncate", this._defaults = { lines: 1, ellipsis: "\u2026", showMore: "", showLess: "", position: "end", lineHeight: "auto" }, this.config(b), this.original = this.cached = a.innerHTML, this.isTruncated = !1, this.isCollapsed = !0, this.update() } return a.prototype = { config: function (c) { if (this.options = Object.assign({}, this._defaults, c), "auto" === this.options.lineHeight) { var a = getComputedStyle(this.element).lineHeight, b = 18; "normal" !== a && (b = parseInt(a, 10)), this.options.lineHeight = b } void 0 === this.options.maxHeight && (this.options.maxHeight = parseInt(this.options.lines, 10) * parseInt(this.options.lineHeight, 10)), "start" !== this.options.position && "middle" !== this.options.position && "end" !== this.options.position && (this.options.position = "end"), this.clipNode = document.createRange().createContextualFragment(this.options.showMore)?.childNodes[0], this.original && this.update() }, update: function (b) { var c = !this.isCollapsed; void 0 !== b ? this.original = this.element.innerHTML = b : this.isCollapsed && this.element.innerHTML === this.cached && (this.element.innerHTML = this.original); var a = document.createElement("div"), d = this.element.childNodes, f = d.length; for (let e = 0; e < f; e++) { let g = d[0]; a.appendChild(g) } a.style.border = "none", a.style.margin = 0, a.style.padding = 0, a.style.width = "auto", a.style.height = "auto", a.style.wordWrap = "break-word", this.element.appendChild(a), this.isTruncated = !1, this.element.clientHeight > this.options.maxHeight ? (this.isTruncated = h(a, a, this.clipNode, this.options), this.isExplicitlyCollapsed && (this.isCollapsed = !0, c = !1)) : this.isCollapsed = !1, a.replaceWith(...a.childNodes), this.cached = this.element.innerHTML, c && (this.element.innerHTML = this.original) }, expand: function () { this.isExplicitlyCollapsed && (this.isExplicitlyCollapsed = !1), this.isCollapsed && (this.isCollapsed = !1, this.element.innerHTML = this.isTruncated ? this.original + this.options.showLess : this.original) }, collapse: function (a) { this.isExplicitlyCollapsed = !0, this.isCollapsed || (this.isCollapsed = !0, (a = a || !1) ? this.update() : this.element.innerHTML = this.cached) } }, a })